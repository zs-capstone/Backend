name: Deploy to Amazon EC2

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-northeast-2
  PROJECT_NAME: capstone
  S3_BUCKET_NAME: capstone4
  CODE_DEPLOY_APPLICATION_NAME: capstone
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: capstone-codedeploy

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    # (1) 기본 체크아웃e
    - name: Checkout
      uses: actions/checkout@v3

    # (2) JDK 11 세팅
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'

    - name: Create .env file
      run: |
        touch .env
        echo -e "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}\nAWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}\nJWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
        cat .env

#    - name: Set Yaml
#      uses: microsoft/variable-substitution@v1
#      with:
#        files: ${{ env.RESOURCE_PATH }}
#      env:
#        cloud.aws.credentials.accesskey : ${{ secrets.AWS_ACCESS_KEY_ID }}
#        cloud.aws.credentials.secretkey: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#        jwt.secret: ${{ secrets.JWT_SECRET }}

      # (3) Gradle build (Test 제외)
#    - name: Build with Gradle
#      uses: gradle/gradle-build-action@0d13054264b0bb894ded474f08ebb30921341cee
#      with:
#        arguments: clean build -x test
    - name: Make zip file
      run: zip -qq -r ./$GITHUB_SHA.zip .
      shell: bash

    # (4) AWS 인증 (IAM 사용자 Access Key, Secret Key 활용)
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

#    # (5) 빌드 결과물을 S3 버킷에 업로드
#    - name: Upload to AWS S3
#      run: |
#        aws deploy push \
#          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
#          --ignore-hidden-files \
#          --s3-location s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip \
#          --source .
#
#    # (6) S3 버킷에 있는 파일을 대상으로 CodeDeploy 실행
#    - name: Deploy to AWS EC2 from S3
#      run: |
#        aws deploy create-deployment \
#          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
#          --deployment-config-name CodeDeployDefault.AllAtOnce \
#          --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
#          --s3-location bucket=$S3_BUCKET_NAME,key=$GITHUB_SHA.zip,bundleType=zip

    - name: Delete all files on s3
      run: aws s3 rm s3://$S3_BUCKET_NAME/ --recursive --include "*"

    - name: Upload .zip file to s3
      run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$PROJECT_NAME/$GITHUB_SHA.zip

    - name: Code deploy
      run: >
        aws deploy create-deployment
        --application-name $CODE_DEPLOY_APPLICATION_NAME
        --deployment-config-name CodeDeployDefault.AllAtOnce
        --deployment-group-name $CODE_DEPLOY_DEPLOYMENT_GROUP_NAME
        --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$GITHUB_SHA.zip